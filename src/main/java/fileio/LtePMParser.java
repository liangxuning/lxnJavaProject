package fileio;

import org.dom4j.*;
import org.dom4j.io.SAXReader;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.Set;

import javax.xml.stream.XMLInputFactory;
import javax.xml.stream.XMLStreamConstants;
import javax.xml.stream.XMLStreamReader;



/**
 * LtePMParser for gcp
 * 
 * @author heli 2012-09-25
 * 2012-11-1??????ùp????????????????????????????????ß’
 * 
 *  * 2014-1-22
 * ????????????????Error???ß”?????????????????????????zip???????????
 * ???????ßÿ????????
 * 
 */

public class LtePMParser{

	// ?õ•????????
	 HashMap<String, HashMap<String, String>> colNameCut = null;
	// ?õ•object???????????ß”??????ß“??ª«map<mscfunction,List<mm,cm>>
	 HashMap<String, ArrayList<String>> meaMap = null;
	// ?õ•object?????????¶¡???????????????
	 LinkedHashMap<String, LinkedHashMap<String, LinkedHashMap<String, String>>> LteSubMea = null;
	
	//???????????????????
	ArrayList<String> allNE = null;
	
	//???????????
	private String encoding = null;
	public static void main(String[] args) throws URISyntaxException{
//		File f = new File("/Users/liangxuning/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/af18cf0b0163bfdf31df7fcad11141a1/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/test.xml");
		File f = new File("/Users/liangxuning/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/af18cf0b0163bfdf31df7fcad11141a1/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/ENB-PM-V3.0.0-EutranRelation-20190319-0500P04.xml_772621552944300000.tmp1552961686290DG7021477141654_20190319050000#null");

		LtePMParser lpp = new LtePMParser();
		lpp.parseFile(f);
	}
	
	public void parseFile(File file) throws URISyntaxException {

		if (meaMap == null) {

			// ?????allNE
			allNE = initNE();

			// ?????????°§??
			// ??????????????????
			File configFile = new File(this.getClass().getResource("../testfile/colNameCutConfig.ini").toURI());
			colNameCut = AdapterUtil.getInstance().ReadColumnNameCutConfig(
					configFile);
			writeLog("???????????????????????!");

			// ??????????????
			configFile = new File(this.getClass().getResource("../testfile/meaConfig.ini").toURI());
			meaMap = AdapterUtil.getInstance().ReadConfig(configFile);
			writeLog("???????????????????!");

			// ???????????????
			configFile = new File(this.getClass().getResource("../testfile/subMeaConfig.ini").toURI());
			LteSubMea = ReadLteSubMeaConfig.getInstance().Read(configFile);
			writeLog("????????????????????!");
		}
		
		if(encoding == null){
			this.initEncoding();
		}
		writeLog("????????????????? " + file.getName());
		long starttime = System.currentTimeMillis();
		boolean parseResult = ParseLTEXml(file);
		System.out.println("∫ƒ ±£∫" + (System.currentTimeMillis() - starttime));
		if(parseResult){
			writeLog("????????? " + file.getName() + "???********************\n");
		}else{
			writeLog("????????? " + file.getName() + "???********************\n");
		}
	}

	
	private ArrayList<String> initNE() {
		ArrayList<String> res = new ArrayList<String>();
		res.add("ENODEB");
		res.add("ENB");
		res.add("MME");
		res.add("PCRF");
		res.add("PGW");
		res.add("SGW");
		res.add("HSS");
		res.add("OSS");
		res.add("DRA");
		return res;
	}

	/**
	 * ???????????
	 * 
	 * @param file
	 */
	private boolean ParseLTEXml(File file) {

		FileInputStream fis = null;
		InputStreamReader isr = null;
		XMLStreamReader reader = null;
//		SAXReader saxReader = new SAXReader();
//		Document document = null;
//		try {
//			document = saxReader.read(file);
//		} catch (DocumentException e) {
//			e.printStackTrace();
//		}
//		Element root = document.getRootElement();
		try {
			 fis = new FileInputStream(file);
			 isr = new InputStreamReader(fis, encoding);

			XMLInputFactory fac = XMLInputFactory.newInstance();
			 reader = fac.createXMLStreamReader(isr);

			boolean measurementStart = false;
			boolean pmNameFlag = false;
			boolean pmDateFlag = false;
			boolean pmFlag = false;
			boolean cvTypeFlag = false;// ???cv???????ß’??????????????true????????ß’????????ßµ?false??

			int index = -1;
			int nameIndex = -1;

			String localName = null;
			String endLocalName = null;
			String object = null;
			String beginTime = null;
			String endTime = null;
			String rmUID = null;
			String dn = null;
			String userLabel = null;
			String vendorName = null;
			String counterName = null;
			String counterNameWithOP = null;
			String subName = null;
			String subValue = null;
			String subTag = null;
			String subDn = null;
			String currentSubMea = null;
			String tempPre = null;// ???ß’?????????cv?????sn?ß÷??????
			String tempName = null;// ???ß’?????????cv?????sn?ß÷????????
			String postFix = null;// ?????????????¶¡????????"_"??????

			// ?õ•?????????????????????????map??object?????????????????object??????????????
			LinkedHashMap<String, LinkedHashMap<String, String>> meaNameAndValue = null;
			// ????????object???õ•?????ß”??????ß÷????????????????dn??parent_dn??userLable??beginTime??endTime
			LinkedHashMap<String, String> commonNameAndValue = null;
			// ?õ•??????pmName???????????????,??object?????
			LinkedHashMap<Integer, String> pmNames = null;

			// ?õ•meaMap??List????,?????object????????ß”???mea
			ArrayList<String> meas = null;

			// ?????????object???õ•???????subMeaConfig.ini????????????????????????????
			LinkedHashMap<String, LinkedHashMap<String, String>> subMeas = null;

			// ?õ•??????????????????????ª«map<ERAB,map<HoFail,list<>>>
			LinkedHashMap<String, LinkedHashMap<String, ArrayList<String>>> subQ = null;
			// ?õ•????map<HoFail,list<>>
			LinkedHashMap<String, ArrayList<String>> colMap = null;

			// ?õ•?????????????
			HashMap<String, String> long2short = null;

			int event = -1;
			int count = 0;
			while (reader.hasNext()) {
//				System.out.println("-----------start----------------");
//				System.out.println(reader.next());
				reader.next();
				System.out.println(count++);
//				System.out.println(reader.getElementText().trim());
//				System.out.println(reader.getAttributeCount());
//				int n = reader.getAttributeCount();
//				for(int i = 0; i < n; i++) {
//					String name = reader.getAttributeLocalName(i);
//					System.out.println(name);
//					System.out.println(reader.getAttributeValue(i));
//				}
//				System.out.println("--------------stop-------------------");
//				count++;
//				if (count == 30) {
//					break;
//				}
//				try{
//				event = reader.next();
//
//				switch (event) {
//				case XMLStreamConstants.START_ELEMENT:
//					// ???localname??????????ß÷????
//					localName = reader.getLocalName();
//					System.out.println("194localName: " + localName);
//					if ("BeginTime".equalsIgnoreCase(localName)) {
//						beginTime = AdapterUtil.getInstance().TimeString(
//								reader.getElementText().trim());
//					}
//					if ("EndTime".equalsIgnoreCase(localName)) {
//						endTime = AdapterUtil.getInstance().TimeString(
//								reader.getElementText().trim());
//					}
//					if ("VendorName".equalsIgnoreCase(localName)) {
//						vendorName = reader.getElementText().trim();
//					}
//					if ("Measurements".equalsIgnoreCase(localName)) {
//						// a new Measurement starts
//						measurementStart = true;
//					}
//					if (measurementStart) {
//						// measurement handler
//						if ("ObjectType".equalsIgnoreCase(localName)) {
//							counterName = reader.getElementText().trim().toUpperCase();
//							object = counterName;
//							counterNameWithOP = "op_" + counterName;
//
////							writeLog("ObjectType=" + object+ ", counterName=" + counterNameWithOP);
//
//							// ????object???????????????
//							if (colNameCut !=null && colNameCut.containsKey(object.toUpperCase())) {
//								long2short = colNameCut.get(object.toUpperCase());
//							}
//
//							// new???????obje??????????????????????????
//							meaNameAndValue = new LinkedHashMap<String, LinkedHashMap<String, String>>();
//
//							// ??????object????????ß÷???????????¶¡????,??????????????
//							subMeas = LteSubMea.get(object.toUpperCase());
//
//							// ???????????????????????????????ßÿ???????????????object???????????object??????????????????ß’??????
//							if (subMeas != null) {
//
//								// ???object??????????subQ
//								subQ = new LinkedHashMap<String, LinkedHashMap<String, ArrayList<String>>>();
//
//								// ???subQ,???name??????????ß“??????????????
//								for (String s : subMeas.keySet()) {
//									for (String name : subMeas.get(s).keySet()) {
//										if (!subQ.containsKey(s)) {
//											colMap = new LinkedHashMap<String, ArrayList<String>>();
//											subQ.put(s, colMap);
//										}
//										colMap.put(name,new ArrayList<String>());
//									}
//								}
//
//							}
//
//							// ????????object?????????õ•?????ß”??????ß÷????????????????dn??userLable??beginTime??endTime
//							commonNameAndValue = new LinkedHashMap<String, String>();
//
//							// ??????????????object?????????pmName???????????????¶¡????
//							pmNames = new LinkedHashMap<Integer, String>();
//
//							if (meaMap != null && meaMap.containsKey(object.toUpperCase())) {
//								// ??????????ß÷????object????????ß”???
//								meas = meaMap.get(object.toUpperCase());
//
//								int count = meas.size();
//								for (int i = 0; i < count; i++) {
//									String mea = meas.get(i);
//									// ?????????????????????map?????®∞??????????????????
//									LinkedHashMap<String, String> nameAndValue = new LinkedHashMap<String, String>();
//									// ???®∞??????????????(?????)????map?????????????
//									meaNameAndValue.put(mea, nameAndValue);
//								}
//							} else {
//								writeLog("????????ß”????? " + object
//										+ " ?????????????meaConfig.ini");
//							}
//						}
//						if ("PmName".equalsIgnoreCase(localName)) {
//							pmNameFlag = true;
//
//						}
//						if (pmNameFlag) {
//							// pmname handler, add columnNames
//							if ("N".equalsIgnoreCase(localName)) {
//								// ???????????????
//								nameIndex = Integer.parseInt(getXMLAttribute(reader, "i"));
//								String text = reader.getElementText().trim();
//
//								// ???????????????????õ•??????????¶¡??????????
//								pmNames.put(nameIndex, text);
//
//								// if contains "_" then discard the name
//								if (!text.contains("_")) {
//
//									// ?????????????????????????????????????????????map??
//									text = AdapterUtil.getInstance().ColumnNameFormat(text);
//									if("".equals(text)|| !text.contains("_")) continue; //????????????????
//
//									// ???????????????????????
//									String pre = text.substring(0, text.indexOf("_"));
//
//									// ?????????????????????
//
//									// ?????????®π???????????????????ß”®π?
//									String afterPre = text.substring(text
//											.indexOf("_") + 1);
//									if (long2short != null) {
//										if (long2short.containsKey(afterPre.toUpperCase())) {
//											afterPre = long2short.get(afterPre.toUpperCase());
//										}
//									}
//									if(meaNameAndValue.containsKey(pre.toUpperCase())){
//										meaNameAndValue.get(pre.toUpperCase()).put(afterPre, "");
//									}else{
//										writeLog("?®∞???  " + pre + " ¶ƒ??????????ßÿ??â«");
//									}
//
//
//								} else {
//									// ???????????"_"???????????????meaNameAndValue?ßµ????????????????
//									// ?????????????????????????????ßÿ??????????????????????????ß’???
//									// ??????¶¡????????????¶¡????????????cv?????????????????????????????
//									// ????????????cv?????????????????????
//									// ????????????????????????????????????????subMeaConfig.ini??????????
//									//IRATHO.FailPrepOutUtran._Cause
//									// subMN:?????????
//									String subMN = text.replace("_", "");
//									if(!subMN.contains(".")) continue;
//									String subFileName = this.getSubFileName(subMN);
//									// ?????
//									if (subMeas != null
//											&& subMeas.containsKey(subFileName)) {
//										// nothing
//									} else {
//										// ?????
//										// nothing
//									}
//								}
//
//							}
//
//						}
//						if ("PmData".equalsIgnoreCase(localName)) {
//							pmDateFlag = true;
//						}
//						if (pmDateFlag) {
//							// pmdata handler
//							if ("Pm".equalsIgnoreCase(localName)) {
//								pmFlag = true;
//								rmUID = getXMLAttribute(reader, "rmUID");
//								dn = getXMLAttribute(reader, "dn");
//								userLabel = getXMLAttribute(reader, "userLabel");
//
//								//2013-1-10??dn??ß÷?\????
//								rmUID = AdapterUtil.getInstance().valueFormat(rmUID);
//								dn = AdapterUtil.getInstance().valueFormat(dn);
//								userLabel = AdapterUtil.getInstance().valueFormat(userLabel);
//
//								// 2012-10-11 ??ßªdn?????ß⁄????????????parent_dn?????????ßÿ?
//								String parent_dn = null;
//								if (dn.contains(",")) {
//									parent_dn = dn.substring(0, dn
//											.lastIndexOf(","));
//								} else {
//									parent_dn = "null";
//								}
//
//								// ???????ß÷??????????????????????
//								commonNameAndValue.put("rmUID", rmUID);
//								commonNameAndValue.put("userLabel", userLabel);
//								commonNameAndValue.put("dn", dn);
//								commonNameAndValue.put("parent_dn", parent_dn);
//								commonNameAndValue.put("beginTime", beginTime);
//								commonNameAndValue.put("endTime", endTime);
//								commonNameAndValue
//										.put("vendorName", vendorName);
//
//								// ????????????????????????
//								if(meas != null){
//								for (int i = 0; i < meas.size(); i++) {
//									meaNameAndValue.get(meas.get(i)).putAll(
//											commonNameAndValue);
//								}
//								}
//								commonNameAndValue.clear();// commonNameAndValue????????????????????
//							}
//							if (pmFlag) {
//
//								// add columnValues
//								if ("V".equalsIgnoreCase(localName)) {
//									// if v, ???????????????????map??
//									String indexStr = getXMLAttribute(reader, "i");
//									if(indexStr == null) {
//										writeLog("ERROR: illegal value index,dn="+dn);
//										continue;
//									}
//									index = Integer.parseInt(indexStr);
//									String name = pmNames.containsKey(index)?pmNames.get(index):null;
//									if(name == null){
//										writeLog("illegal data: valueIndex="+index+" dn="+dn );
//										continue;
//									}
//
//									String value = reader.getElementText().trim();
//									System.out.println("386??value: " + value);
//									//2012-1018??dn??ß÷?\????,"NIL"?????
//									value = AdapterUtil.getInstance().valueFormat(value);
//
//									name = AdapterUtil.getInstance().ColumnNameFormat(name);
//
//									String pre = name.substring(0, name
//											.indexOf("_")).toUpperCase();
//
//									String afterPre = name.substring(name
//											.indexOf("_") + 1);
//
//									if (long2short != null) {
//										if (long2short.containsKey(afterPre.toUpperCase())) {
//											afterPre = long2short.get(afterPre.toUpperCase());
//										}
//									}
//
//									if (meaNameAndValue.containsKey(pre)) {
//										meaNameAndValue.get(pre).put(afterPre,
//												value);
//									}
//								}
//								if ("CV".equalsIgnoreCase(localName)) {
//									// if cv,
//									// ???ßÿ?®∞?????????????????????????????????????????????????????????
//									String indexStr = getXMLAttribute(reader, "i");
//									if(indexStr == null) {
//										writeLog("ERROR: illegal value index,dn="+dn);
//										continue;
//									}
//									index = Integer.parseInt(indexStr);
//
//									String name = pmNames.containsKey(index)?pmNames.get(index):null;
//									if(name == null){
//										writeLog("illegal data: valueIndex="+index+" dn="+dn );
//										continue;
//									}
//									String subMN = name.replace("_", "");
//
//									// ?????????????ª«ERAB_Qci
//									String subFileName = this.getSubFileName(subMN);
//
//									subMN = AdapterUtil.getInstance().ColumnNameFormat(subMN);
//
//									// ???õÃ?????????????sn??sv???????
//									currentSubMea = subMN.substring(0, subMN.lastIndexOf("_"));
//
//									if (subMeas != null
//											&& subMeas.containsKey(subFileName.toUpperCase())) {
//										// ????????????????????????????????????????????cv??????????????????????????ß“???
//										cvTypeFlag = true;// ???cv???????ß’??????????????true????????ß’????????ßµ?false??
////										postFix = name.substring(name.indexOf("_") + 1);
//										postFix = name.substring(name.lastIndexOf(".") + 1).replace("_", "");
//
//									} else {
//										// ?????????????????????cv??????ß’?????????????ßµ???????????mm??cm???
//										cvTypeFlag = false;// ???cv???????ß’??????????????true????????ß’????????ßµ?false??
//
//									}
//
//								}
//
//								if ("SN".equalsIgnoreCase(localName)) {
//									subName = reader.getElementText().trim();
//									if (cvTypeFlag) {// ???cv???????ß’??????????????true??
//										//
//										// ???ERAB.HoFail.QCI1?ß÷?HoFail???ßﬁ??????
//										// 2012-10-13??????????????????????
//										/*
//										 * <N i="3">GTP.OutOctPgw._Apn</N>
//										 * <CV i="3">
//										 * <SN>GTP.OutOctPgw.basic1.npc.com.mnc002.mcc460.gprs</SN>
//										 * <SV>1.395578E9</SV>
//										 * <SN>GTP.OutOctPgw.basic2.npc.com.mnc002.mcc460.gprs</SN>
//										 * <SV>3676.0</SV>
//										 * ????????????????????????sn????????¶¬????
//										 */
//										// String subColN = subName.substring(
//										// subName.indexOf(".") + 1,
//										// subName.lastIndexOf("."));
//
//										// currentSubMea????????????????????????????????????????
//										/*
//										 * <N i="3">GTP.OutOctPgw._Apn</N>
//										 * currentSubMea = GTP_OutOctPgw
//										 * ???????????????OutOctPgw
//										 */
//										String subColN = currentSubMea
//												.substring(currentSubMea
//														.indexOf("_") + 1);
//
//										// ???subQ??map<subFileName,map<name,List<>>>??name????
//										subColN = AdapterUtil.getInstance()
//												.ColumnNameFormat(subColN);
//										// ???subQ??subFileName????
//										String subFileName = subName.substring(
//												0, subName.indexOf("."))
//												+ "_" + postFix;
//										// ????®π??????
//										// 2012-10-13??????????
//										/*
//										 * subName=GTP.IncOctPgw.basic1.npc.com.mnc002.mcc460.gprs
//										 * currentSubMea=GTP_IncOctPgw
//										 * subTag????subName???currentSubMea????
//										 */
//										subTag = subName.substring(currentSubMea
//														.length() + 1);
//										if(!subName.replaceAll("\\.", "_").contains(subColN)){
//											writeLog("subName="+subName+" subColN="+subColN+" subTag="+subTag);
//											break;
//										}
//										subTag = AdapterUtil.getInstance()
//												.ColumnNameFormat(subTag);
//										// .lastIndexOf(".") + 1);
//										// ???®π????dn
//										subDn = dn + "," + postFix + "="
//												+ subTag;
//										// ???????????????????dn
//										String parent_dn = dn;
//
//										// ????®π?????¶ƒ???õ•????õ•
//										if (subQ.containsKey(subFileName.toUpperCase())) {
//											if (!subQ.get(subFileName.toUpperCase()).get(
//													postFix.toUpperCase()).contains(subTag)) {
//												subQ.get(subFileName.toUpperCase()).get(
//														postFix.toUpperCase()).add(subTag);
//											}
//											if (!subQ.get(subFileName.toUpperCase())
//													.get("DN").contains(subDn)) {
//												subQ.get(subFileName.toUpperCase()).get("DN")
//														.add(subDn);
//											}
//
//											subQ.get(subFileName.toUpperCase()).get(
//													"parent_dn".toUpperCase()).add(parent_dn);
//										} else {
//											writeLog("????? "
//															+ subFileName
//															+ "¶ƒ??????????ßÿ??â«???????????subMeaConfig.ini");
//										}
//
//									} else {// ???cv??????ß’????????ßµ?false??
//										tempPre = subName.substring(0, subName
//												.indexOf("."));
//										tempName = subName.substring(subName
//												.indexOf(".") + 1);
//										tempName = AdapterUtil.getInstance()
//												.ColumnNameFormat(tempName);
//										// ????ß’????????ßµ????sn????????????????????ß’???????map??
//										if (meaNameAndValue
//												.containsKey(tempPre.toUpperCase())) {
//											meaNameAndValue.get(tempPre.toUpperCase()).put(
//													tempName+"_sub", "");// ß’??????????????
//										}
//
//									}
//								}
//								if ("SV".equalsIgnoreCase(localName)) {
//									subValue = reader.getElementText().trim();
//
//									//2012-1018??dn??ß÷?\????
//									subValue = AdapterUtil.getInstance().valueFormat(subValue);
//
//									if (cvTypeFlag) {// ???cv???????ß’??????????????true??
//										String subFileName = currentSubMea
//												.substring(0, currentSubMea
//														.indexOf("_"))
//												+ "_" + postFix;
//										String subColN = currentSubMea
//												.substring(currentSubMea
//														.indexOf("_") + 1);
//										subColN = AdapterUtil.getInstance()
//												.ColumnNameFormat(subColN);
//										if (subQ.get(subFileName.toUpperCase()).containsKey(
//												subColN.toUpperCase())) {
//											subQ.get(subFileName.toUpperCase()).get(subColN.toUpperCase())
//													.add(subValue);
//										} else {
//											writeLog("???????????"
//															+ subColN
//															+ " ¶ƒ??????????ßÿ??â«????subMeaConfig.ini");
//										}
//
//									} else {// ???cv??????ß’????????ßµ?false??
//										if(meaNameAndValue.containsKey(tempPre.toUpperCase())){
//											if (long2short != null) {
//												if (long2short.containsKey(tempName.toUpperCase())) {
//													tempName = long2short.get(tempName.toUpperCase());
//												}
//											}
//										meaNameAndValue.get(tempPre.toUpperCase()).put(
//												tempName+"_sub", subValue);// ß’?????
//										}
//										// ???tempPre??tempName???????????cv????
//										tempPre = null;
//										tempName = null;
//									}
//								}
//							}
//						}
//
//					}
//
//					break;
//				case XMLStreamConstants.CHARACTERS:
//					// ...
//					break;
//				case XMLStreamConstants.END_ELEMENT:
//					// ...
//					endLocalName = reader.getLocalName();
//
//					if (endLocalName.equalsIgnoreCase("Pm")) {
//
//						// write names
//						// ????????????????????????????ß’??,
//						if(meas != null){
//						for (String mea : meas) {
//							// ß’????????????
////							super.appendLine((counterNameWithOP + "_" + mea).toLowerCase(),
////									meaNameAndValue.get(mea));
////							System.out.println((counterNameWithOP + "_" + mea).toLowerCase()+"  "+meaNameAndValue.get(mea));
//							Set<String> key = meaNameAndValue.get(mea).keySet();
//						    for (Iterator it = key.iterator(); it.hasNext();) {
//						    	 String meaName = (String) it.next();
//						    	 meaNameAndValue.get(mea).put(meaName, "");
//
//						    }
//							}
//						}
//						// ß’???????????,?????ßÿ????????????????¶¡????????????????
//						if (subQ != null) {
////							writeLog("?????ß’???");
//							for (String subF : subQ.keySet()) {
//								String subOPSheet = counterNameWithOP + "_"
//										+ subF;
//
//								// ??????
//								HashMap<String, String> subValues = new HashMap<String, String>();
//
//								for (int i = 0; i < subQ.get(subF).get("dn".toUpperCase())
//										.size(); i++) {
//
//									// ????subQ.get(subF).keySet()?????????????
//									for (String name : subQ.get(subF).keySet()) {
//										if (name.equalsIgnoreCase("beginTime".toUpperCase())) {
//
//											subValues.put("beginTime".toUpperCase(),
//													beginTime);
//											// bw.write(beginTime + ",");
//											continue;
//										}
//										if (name.equalsIgnoreCase("endTime".toUpperCase())) {
//
//											subValues.put("endTime".toUpperCase(), endTime);
//
//											// bw.write(endTime + ",");
//											continue;
//										}
//										if (subQ.get(subF).get(name).size() > 0) {
//											if(i<subQ.get(subF).get(name).size()){
//												subValues.put(name, subQ.get(subF).get(name).get(i));
//											}
//
//										}
//									}
//									// ß’????????????
////									super.appendLine(subOPSheet.toLowerCase(), subValues);
//								}
//							}
//							// ???pm???????????pm???????????
//							for (String s : subQ.keySet()) {
//								for (String name : subQ.get(s).keySet()) {
//									subQ.get(s).get(name).clear();
//								}
//							}
//						}
//						pmFlag = false;
//					}
//
//					if (endLocalName.equalsIgnoreCase("PmData")) {
//						pmDateFlag = false;
//					}
//
//					if (endLocalName.equalsIgnoreCase("PmName")) {
//						pmNameFlag = false;
//					}
//					if (endLocalName.equalsIgnoreCase("Measurements")) {
//						// a measurement over
//						measurementStart = false;
//					}
//					break;
//				}
//				}catch (Exception e){
//					writeLog("ERROR??" + e.toString());
//					writeLog(AdapterUtil.getStackTrace(e));
//					writeLog("continue next");
//					event = reader.next();
//				}
			}
			reader.close();
			isr.close();
			fis.close();
		} catch (Exception e) {
			writeLog("ERROR??" + e.getMessage());
			writeLog(AdapterUtil.getStackTrace(e));
			e.printStackTrace();
			return false;
		} finally{
			try{
				if(reader != null)reader.close();
				if(isr!= null)isr.close();
				if(fis != null)fis.close();
			}catch (Exception e) {
				e.printStackTrace();
			}
		}
		return true;
	}

	/**
	 * ??????????ß÷???????
	 * @param reader
	 * @param obj
	 * @return
	 */
	private String getXMLAttribute(XMLStreamReader reader, String obj) {
		String res = null;
		if(obj == null || reader == null){
			return res;
		}
		int n = reader.getAttributeCount();
		for(int i = 0; i < n; i++) {
			String name = reader.getAttributeLocalName(i);
			if(obj.equalsIgnoreCase(name)){
				res = reader.getAttributeValue(i);
			}
		}
		return res;
	}
	
	private String getSubFileName(String name){
		String res = "";
		if(name == null || !name.contains(".")) return res;
		res = name.substring(0,name.indexOf("."))
				+ "_"
				+ name.substring(name.lastIndexOf(".") + 1);
		return res.toUpperCase();
	}
	
	private final void initEncoding(){
		try {
			encoding = "GBK";
		} catch (Exception e) {
			encoding = null;
		}
		if(encoding == null || ("").equals(encoding)){
			encoding = "GBK";
		}
		writeLog("encoding = " + encoding);
	}
	
	private void writeLog(String msg){
		try {
			System.out.println("writeLog: " + msg);
		} catch (Exception e) {
			System.out.println(msg);
		}
	}


	private boolean ParseLTEXml2(File file) {
		ReadHander readHander = new ReadHander();
		SAXReader saxReader = new SAXReader();
		saxReader.setDefaultHandler(readHander);
		try {
			saxReader.read(file);
		} catch (DocumentException e) {
			e.printStackTrace();
		}
//		saxReader.addHandler("/", new ElementHandler() {
//			@Override
//			public void onStart(ElementPath elementPath) {
//				Element studentNode = elementPath.getCurrent();  //ªÒ»°studentΩ⁄µ„
//				System.out.println(studentNode.getName());
//				System.out.println(studentNode.getText());
//				System.out.println(studentNode.getTextTrim());
////				System.out.println("----" + studentNode.attributeValue("id"));
//				studentNode.detach();
//			}
//
//			@Override
//			public void onEnd(ElementPath elementPath) {
//
//			}
//		});
//		try {
//			saxReader.read(file);
//		} catch (DocumentException e) {
//			e.printStackTrace();
//		}
//		Document document = null;
//		try {
//			document = saxReader.read(file);
//		} catch (DocumentException e) {
//			e.printStackTrace();
//		}
//		Element root = document.getRootElement();
//		Iterator it = root.elementIterator();
//		int count =0;
//		System.out.println("start");
//		while (it.hasNext()) {
//			Element element = (Element) it.next();
//			System.out.println(element.getName());
//			count++;
//			if (count == 30) {
//				return true;
//			}
//		}
		try {
//
//			boolean measurementStart = false;
//			boolean pmNameFlag = false;
//			boolean pmDateFlag = false;
//			boolean pmFlag = false;
//			boolean cvTypeFlag = false;// ???cv???????ß’??????????????true????????ß’????????ßµ?false??
//
//			int index = -1;
//			int nameIndex = -1;
//
//			String localName = null;
//			String endLocalName = null;
//			String object = null;
//			String beginTime = null;
//			String endTime = null;
//			String rmUID = null;
//			String dn = null;
//			String userLabel = null;
//			String vendorName = null;
//			String counterName = null;
//			String counterNameWithOP = null;
//			String subName = null;
//			String subValue = null;
//			String subTag = null;
//			String subDn = null;
//			String currentSubMea = null;
//			String tempPre = null;// ???ß’?????????cv?????sn?ß÷??????
//			String tempName = null;// ???ß’?????????cv?????sn?ß÷????????
//			String postFix = null;// ?????????????¶¡????????"_"??????
//
//			// ?õ•?????????????????????????map??object?????????????????object??????????????
//			LinkedHashMap<String, LinkedHashMap<String, String>> meaNameAndValue = null;
//			// ????????object???õ•?????ß”??????ß÷????????????????dn??parent_dn??userLable??beginTime??endTime
//			LinkedHashMap<String, String> commonNameAndValue = null;
//			// ?õ•??????pmName???????????????,??object?????
//			LinkedHashMap<Integer, String> pmNames = null;
//
//			// ?õ•meaMap??List????,?????object????????ß”???mea
//			ArrayList<String> meas = null;
//
//			// ?????????object???õ•???????subMeaConfig.ini????????????????????????????
//			LinkedHashMap<String, LinkedHashMap<String, String>> subMeas = null;
//
//			// ?õ•??????????????????????ª«map<ERAB,map<HoFail,list<>>>
//			LinkedHashMap<String, LinkedHashMap<String, ArrayList<String>>> subQ = null;
//			// ?õ•????map<HoFail,list<>>
//			LinkedHashMap<String, ArrayList<String>> colMap = null;
//
//			// ?õ•?????????????
//			HashMap<String, String> long2short = null;
//
//			int event = -1;
//			while (it.hasNext()) {
//
//				try{
//					event = (int) it.next();
//
//					switch (event) {
//						case XMLStreamConstants.START_ELEMENT:
//							// ???localname??????????ß÷????
//							localName = reader.getLocalName();
//							System.out.println("194localName: " + localName);
//							if ("BeginTime".equalsIgnoreCase(localName)) {
//								beginTime = AdapterUtil.getInstance().TimeString(
//										reader.getElementText().trim());
//							}
//							if ("EndTime".equalsIgnoreCase(localName)) {
//								endTime = AdapterUtil.getInstance().TimeString(
//										reader.getElementText().trim());
//							}
//							if ("VendorName".equalsIgnoreCase(localName)) {
//								vendorName = reader.getElementText().trim();
//							}
//							if ("Measurements".equalsIgnoreCase(localName)) {
//								// a new Measurement starts
//								measurementStart = true;
//							}
//							if (measurementStart) {
//								// measurement handler
//								if ("ObjectType".equalsIgnoreCase(localName)) {
//									counterName = reader.getElementText().trim().toUpperCase();
//									object = counterName;
//									counterNameWithOP = "op_" + counterName;
//
////							writeLog("ObjectType=" + object+ ", counterName=" + counterNameWithOP);
//
//									// ????object???????????????
//									if (colNameCut !=null && colNameCut.containsKey(object.toUpperCase())) {
//										long2short = colNameCut.get(object.toUpperCase());
//									}
//
//									// new???????obje??????????????????????????
//									meaNameAndValue = new LinkedHashMap<String, LinkedHashMap<String, String>>();
//
//									// ??????object????????ß÷???????????¶¡????,??????????????
//									subMeas = LteSubMea.get(object.toUpperCase());
//
//									// ???????????????????????????????ßÿ???????????????object???????????object??????????????????ß’??????
//									if (subMeas != null) {
//
//										// ???object??????????subQ
//										subQ = new LinkedHashMap<String, LinkedHashMap<String, ArrayList<String>>>();
//
//										// ???subQ,???name??????????ß“??????????????
//										for (String s : subMeas.keySet()) {
//											for (String name : subMeas.get(s).keySet()) {
//												if (!subQ.containsKey(s)) {
//													colMap = new LinkedHashMap<String, ArrayList<String>>();
//													subQ.put(s, colMap);
//												}
//												colMap.put(name,new ArrayList<String>());
//											}
//										}
//
//									}
//
//									// ????????object?????????õ•?????ß”??????ß÷????????????????dn??userLable??beginTime??endTime
//									commonNameAndValue = new LinkedHashMap<String, String>();
//
//									// ??????????????object?????????pmName???????????????¶¡????
//									pmNames = new LinkedHashMap<Integer, String>();
//
//									if (meaMap != null && meaMap.containsKey(object.toUpperCase())) {
//										// ??????????ß÷????object????????ß”???
//										meas = meaMap.get(object.toUpperCase());
//
//										int count = meas.size();
//										for (int i = 0; i < count; i++) {
//											String mea = meas.get(i);
//											// ?????????????????????map?????®∞??????????????????
//											LinkedHashMap<String, String> nameAndValue = new LinkedHashMap<String, String>();
//											// ???®∞??????????????(?????)????map?????????????
//											meaNameAndValue.put(mea, nameAndValue);
//										}
//									} else {
//										writeLog("????????ß”????? " + object
//												+ " ?????????????meaConfig.ini");
//									}
//								}
//								if ("PmName".equalsIgnoreCase(localName)) {
//									pmNameFlag = true;
//
//								}
//								if (pmNameFlag) {
//									// pmname handler, add columnNames
//									if ("N".equalsIgnoreCase(localName)) {
//										// ???????????????
//										nameIndex = Integer.parseInt(getXMLAttribute(reader, "i"));
//										String text = reader.getElementText().trim();
//
//										// ???????????????????õ•??????????¶¡??????????
//										pmNames.put(nameIndex, text);
//
//										// if contains "_" then discard the name
//										if (!text.contains("_")) {
//
//											// ?????????????????????????????????????????????map??
//											text = AdapterUtil.getInstance().ColumnNameFormat(text);
//											if("".equals(text)|| !text.contains("_")) continue; //????????????????
//
//											// ???????????????????????
//											String pre = text.substring(0, text.indexOf("_"));
//
//											// ?????????????????????
//
//											// ?????????®π???????????????????ß”®π?
//											String afterPre = text.substring(text
//													.indexOf("_") + 1);
//											if (long2short != null) {
//												if (long2short.containsKey(afterPre.toUpperCase())) {
//													afterPre = long2short.get(afterPre.toUpperCase());
//												}
//											}
//											if(meaNameAndValue.containsKey(pre.toUpperCase())){
//												meaNameAndValue.get(pre.toUpperCase()).put(afterPre, "");
//											}else{
//												writeLog("?®∞???  " + pre + " ¶ƒ??????????ßÿ??â«");
//											}
//
//
//										} else {
//											// ???????????"_"???????????????meaNameAndValue?ßµ????????????????
//											// ?????????????????????????????ßÿ??????????????????????????ß’???
//											// ??????¶¡????????????¶¡????????????cv?????????????????????????????
//											// ????????????cv?????????????????????
//											// ????????????????????????????????????????subMeaConfig.ini??????????
//											//IRATHO.FailPrepOutUtran._Cause
//											// subMN:?????????
//											String subMN = text.replace("_", "");
//											if(!subMN.contains(".")) continue;
//											String subFileName = this.getSubFileName(subMN);
//											// ?????
//											if (subMeas != null
//													&& subMeas.containsKey(subFileName)) {
//												// nothing
//											} else {
//												// ?????
//												// nothing
//											}
//										}
//
//									}
//
//								}
//								if ("PmData".equalsIgnoreCase(localName)) {
//									pmDateFlag = true;
//								}
//								if (pmDateFlag) {
//									// pmdata handler
//									if ("Pm".equalsIgnoreCase(localName)) {
//										pmFlag = true;
//										rmUID = getXMLAttribute(reader, "rmUID");
//										dn = getXMLAttribute(reader, "dn");
//										userLabel = getXMLAttribute(reader, "userLabel");
//
//										//2013-1-10??dn??ß÷?\????
//										rmUID = AdapterUtil.getInstance().valueFormat(rmUID);
//										dn = AdapterUtil.getInstance().valueFormat(dn);
//										userLabel = AdapterUtil.getInstance().valueFormat(userLabel);
//
//										// 2012-10-11 ??ßªdn?????ß⁄????????????parent_dn?????????ßÿ?
//										String parent_dn = null;
//										if (dn.contains(",")) {
//											parent_dn = dn.substring(0, dn
//													.lastIndexOf(","));
//										} else {
//											parent_dn = "null";
//										}
//
//										// ???????ß÷??????????????????????
//										commonNameAndValue.put("rmUID", rmUID);
//										commonNameAndValue.put("userLabel", userLabel);
//										commonNameAndValue.put("dn", dn);
//										commonNameAndValue.put("parent_dn", parent_dn);
//										commonNameAndValue.put("beginTime", beginTime);
//										commonNameAndValue.put("endTime", endTime);
//										commonNameAndValue
//												.put("vendorName", vendorName);
//
//										// ????????????????????????
//										if(meas != null){
//											for (int i = 0; i < meas.size(); i++) {
//												meaNameAndValue.get(meas.get(i)).putAll(
//														commonNameAndValue);
//											}
//										}
//										commonNameAndValue.clear();// commonNameAndValue????????????????????
//									}
//									if (pmFlag) {
//
//										// add columnValues
//										if ("V".equalsIgnoreCase(localName)) {
//											// if v, ???????????????????map??
//											String indexStr = getXMLAttribute(reader, "i");
//											if(indexStr == null) {
//												writeLog("ERROR: illegal value index,dn="+dn);
//												continue;
//											}
//											index = Integer.parseInt(indexStr);
//											String name = pmNames.containsKey(index)?pmNames.get(index):null;
//											if(name == null){
//												writeLog("illegal data: valueIndex="+index+" dn="+dn );
//												continue;
//											}
//
//											String value = reader.getElementText().trim();
//											System.out.println("386??value: " + value);
//											//2012-1018??dn??ß÷?\????,"NIL"?????
//											value = AdapterUtil.getInstance().valueFormat(value);
//
//											name = AdapterUtil.getInstance().ColumnNameFormat(name);
//
//											String pre = name.substring(0, name
//													.indexOf("_")).toUpperCase();
//
//											String afterPre = name.substring(name
//													.indexOf("_") + 1);
//
//											if (long2short != null) {
//												if (long2short.containsKey(afterPre.toUpperCase())) {
//													afterPre = long2short.get(afterPre.toUpperCase());
//												}
//											}
//
//											if (meaNameAndValue.containsKey(pre)) {
//												meaNameAndValue.get(pre).put(afterPre,
//														value);
//											}
//										}
//										if ("CV".equalsIgnoreCase(localName)) {
//											// if cv,
//											// ???ßÿ?®∞?????????????????????????????????????????????????????????
//											String indexStr = getXMLAttribute(reader, "i");
//											if(indexStr == null) {
//												writeLog("ERROR: illegal value index,dn="+dn);
//												continue;
//											}
//											index = Integer.parseInt(indexStr);
//
//											String name = pmNames.containsKey(index)?pmNames.get(index):null;
//											if(name == null){
//												writeLog("illegal data: valueIndex="+index+" dn="+dn );
//												continue;
//											}
//											String subMN = name.replace("_", "");
//
//											// ?????????????ª«ERAB_Qci
//											String subFileName = this.getSubFileName(subMN);
//
//											subMN = AdapterUtil.getInstance().ColumnNameFormat(subMN);
//
//											// ???õÃ?????????????sn??sv???????
//											currentSubMea = subMN.substring(0, subMN.lastIndexOf("_"));
//
//											if (subMeas != null
//													&& subMeas.containsKey(subFileName.toUpperCase())) {
//												// ????????????????????????????????????????????cv??????????????????????????ß“???
//												cvTypeFlag = true;// ???cv???????ß’??????????????true????????ß’????????ßµ?false??
////										postFix = name.substring(name.indexOf("_") + 1);
//												postFix = name.substring(name.lastIndexOf(".") + 1).replace("_", "");
//
//											} else {
//												// ?????????????????????cv??????ß’?????????????ßµ???????????mm??cm???
//												cvTypeFlag = false;// ???cv???????ß’??????????????true????????ß’????????ßµ?false??
//
//											}
//
//										}
//
//										if ("SN".equalsIgnoreCase(localName)) {
//											subName = reader.getElementText().trim();
//											if (cvTypeFlag) {// ???cv???????ß’??????????????true??
//												//
//												// ???ERAB.HoFail.QCI1?ß÷?HoFail???ßﬁ??????
//												// 2012-10-13??????????????????????
//												/*
//												 * <N i="3">GTP.OutOctPgw._Apn</N>
//												 * <CV i="3">
//												 * <SN>GTP.OutOctPgw.basic1.npc.com.mnc002.mcc460.gprs</SN>
//												 * <SV>1.395578E9</SV>
//												 * <SN>GTP.OutOctPgw.basic2.npc.com.mnc002.mcc460.gprs</SN>
//												 * <SV>3676.0</SV>
//												 * ????????????????????????sn????????¶¬????
//												 */
//												// String subColN = subName.substring(
//												// subName.indexOf(".") + 1,
//												// subName.lastIndexOf("."));
//
//												// currentSubMea????????????????????????????????????????
//												/*
//												 * <N i="3">GTP.OutOctPgw._Apn</N>
//												 * currentSubMea = GTP_OutOctPgw
//												 * ???????????????OutOctPgw
//												 */
//												String subColN = currentSubMea
//														.substring(currentSubMea
//																.indexOf("_") + 1);
//
//												// ???subQ??map<subFileName,map<name,List<>>>??name????
//												subColN = AdapterUtil.getInstance()
//														.ColumnNameFormat(subColN);
//												// ???subQ??subFileName????
//												String subFileName = subName.substring(
//														0, subName.indexOf("."))
//														+ "_" + postFix;
//												// ????®π??????
//												// 2012-10-13??????????
//												/*
//												 * subName=GTP.IncOctPgw.basic1.npc.com.mnc002.mcc460.gprs
//												 * currentSubMea=GTP_IncOctPgw
//												 * subTag????subName???currentSubMea????
//												 */
//												subTag = subName.substring(currentSubMea
//														.length() + 1);
//												if(!subName.replaceAll("\\.", "_").contains(subColN)){
//													writeLog("subName="+subName+" subColN="+subColN+" subTag="+subTag);
//													break;
//												}
//												subTag = AdapterUtil.getInstance()
//														.ColumnNameFormat(subTag);
//												// .lastIndexOf(".") + 1);
//												// ???®π????dn
//												subDn = dn + "," + postFix + "="
//														+ subTag;
//												// ???????????????????dn
//												String parent_dn = dn;
//
//												// ????®π?????¶ƒ???õ•????õ•
//												if (subQ.containsKey(subFileName.toUpperCase())) {
//													if (!subQ.get(subFileName.toUpperCase()).get(
//															postFix.toUpperCase()).contains(subTag)) {
//														subQ.get(subFileName.toUpperCase()).get(
//																postFix.toUpperCase()).add(subTag);
//													}
//													if (!subQ.get(subFileName.toUpperCase())
//															.get("DN").contains(subDn)) {
//														subQ.get(subFileName.toUpperCase()).get("DN")
//																.add(subDn);
//													}
//
//													subQ.get(subFileName.toUpperCase()).get(
//															"parent_dn".toUpperCase()).add(parent_dn);
//												} else {
//													writeLog("????? "
//															+ subFileName
//															+ "¶ƒ??????????ßÿ??â«???????????subMeaConfig.ini");
//												}
//
//											} else {// ???cv??????ß’????????ßµ?false??
//												tempPre = subName.substring(0, subName
//														.indexOf("."));
//												tempName = subName.substring(subName
//														.indexOf(".") + 1);
//												tempName = AdapterUtil.getInstance()
//														.ColumnNameFormat(tempName);
//												// ????ß’????????ßµ????sn????????????????????ß’???????map??
//												if (meaNameAndValue
//														.containsKey(tempPre.toUpperCase())) {
//													meaNameAndValue.get(tempPre.toUpperCase()).put(
//															tempName+"_sub", "");// ß’??????????????
//												}
//
//											}
//										}
//										if ("SV".equalsIgnoreCase(localName)) {
//											subValue = reader.getElementText().trim();
//
//											//2012-1018??dn??ß÷?\????
//											subValue = AdapterUtil.getInstance().valueFormat(subValue);
//
//											if (cvTypeFlag) {// ???cv???????ß’??????????????true??
//												String subFileName = currentSubMea
//														.substring(0, currentSubMea
//																.indexOf("_"))
//														+ "_" + postFix;
//												String subColN = currentSubMea
//														.substring(currentSubMea
//																.indexOf("_") + 1);
//												subColN = AdapterUtil.getInstance()
//														.ColumnNameFormat(subColN);
//												if (subQ.get(subFileName.toUpperCase()).containsKey(
//														subColN.toUpperCase())) {
//													subQ.get(subFileName.toUpperCase()).get(subColN.toUpperCase())
//															.add(subValue);
//												} else {
//													writeLog("???????????"
//															+ subColN
//															+ " ¶ƒ??????????ßÿ??â«????subMeaConfig.ini");
//												}
//
//											} else {// ???cv??????ß’????????ßµ?false??
//												if(meaNameAndValue.containsKey(tempPre.toUpperCase())){
//													if (long2short != null) {
//														if (long2short.containsKey(tempName.toUpperCase())) {
//															tempName = long2short.get(tempName.toUpperCase());
//														}
//													}
//													meaNameAndValue.get(tempPre.toUpperCase()).put(
//															tempName+"_sub", subValue);// ß’?????
//												}
//												// ???tempPre??tempName???????????cv????
//												tempPre = null;
//												tempName = null;
//											}
//										}
//									}
//								}
//
//							}
//
//							break;
//						case XMLStreamConstants.CHARACTERS:
//							// ...
//							break;
//						case XMLStreamConstants.END_ELEMENT:
//							// ...
//							endLocalName = reader.getLocalName();
//
//							if (endLocalName.equalsIgnoreCase("Pm")) {
//
//								// write names
//								// ????????????????????????????ß’??,
//								if(meas != null){
//									for (String mea : meas) {
//										// ß’????????????
////							super.appendLine((counterNameWithOP + "_" + mea).toLowerCase(),
////									meaNameAndValue.get(mea));
////							System.out.println((counterNameWithOP + "_" + mea).toLowerCase()+"  "+meaNameAndValue.get(mea));
//										Set<String> key = meaNameAndValue.get(mea).keySet();
//										for (Iterator it = key.iterator(); it.hasNext();) {
//											String meaName = (String) it.next();
//											meaNameAndValue.get(mea).put(meaName, "");
//
//										}
//									}
//								}
//								// ß’???????????,?????ßÿ????????????????¶¡????????????????
//								if (subQ != null) {
////							writeLog("?????ß’???");
//									for (String subF : subQ.keySet()) {
//										String subOPSheet = counterNameWithOP + "_"
//												+ subF;
//
//										// ??????
//										HashMap<String, String> subValues = new HashMap<String, String>();
//
//										for (int i = 0; i < subQ.get(subF).get("dn".toUpperCase())
//												.size(); i++) {
//
//											// ????subQ.get(subF).keySet()?????????????
//											for (String name : subQ.get(subF).keySet()) {
//												if (name.equalsIgnoreCase("beginTime".toUpperCase())) {
//
//													subValues.put("beginTime".toUpperCase(),
//															beginTime);
//													// bw.write(beginTime + ",");
//													continue;
//												}
//												if (name.equalsIgnoreCase("endTime".toUpperCase())) {
//
//													subValues.put("endTime".toUpperCase(), endTime);
//
//													// bw.write(endTime + ",");
//													continue;
//												}
//												if (subQ.get(subF).get(name).size() > 0) {
//													if(i<subQ.get(subF).get(name).size()){
//														subValues.put(name, subQ.get(subF).get(name).get(i));
//													}
//
//												}
//											}
//											// ß’????????????
////									super.appendLine(subOPSheet.toLowerCase(), subValues);
//										}
//									}
//									// ???pm???????????pm???????????
//									for (String s : subQ.keySet()) {
//										for (String name : subQ.get(s).keySet()) {
//											subQ.get(s).get(name).clear();
//										}
//									}
//								}
//								pmFlag = false;
//							}
//
//							if (endLocalName.equalsIgnoreCase("PmData")) {
//								pmDateFlag = false;
//							}
//
//							if (endLocalName.equalsIgnoreCase("PmName")) {
//								pmNameFlag = false;
//							}
//							if (endLocalName.equalsIgnoreCase("Measurements")) {
//								// a measurement over
//								measurementStart = false;
//							}
//							break;
//					}
//				}catch (Exception e){
//					writeLog("ERROR??" + e.toString());
//					writeLog(AdapterUtil.getStackTrace(e));
//					writeLog("continue next");
//					event = reader.next();
//				}
//			}
//
		} catch (Exception e) {
			writeLog("ERROR??" + e.getMessage());
			writeLog(AdapterUtil.getStackTrace(e));
			e.printStackTrace();
			return false;
		} finally{

		}
		return true;
	}
}
